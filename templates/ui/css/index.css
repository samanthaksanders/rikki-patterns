/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=54)"; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }
  h1:last-child, h2:last-child, h3:last-child, h4:last-child, h5:last-child, h6:last-child,
  ul:last-child, ol:last-child, dl:last-child,
  blockquote:last-child, p:last-child, address:last-child,
  hr:last-child,
  table:last-child,
  fieldset:last-child, figure:last-child,
  pre:last-child {
    margin-bottom: 0; }

ul, ol,
dd {
  margin-left: 24px;
  margin-left: 1.5rem; }

html {
  font-family: "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  background-color: #eaeaea;
  color: #353535;
  -webkit-tap-highlight-color: transparent;
  height: 100%;
  min-height: 100%; }

body {
  position: relative;
  height: 100%; }

h1, h2, h3, h4, h5, h6 {
  line-height: 1.2; }

h1, h2, h3, h4 {
  font-family: "Meta Serif", Georgia, serif; }

h1 {
  font-size: 34px;
  font-size: 2.125rem;
  margin-bottom: 20px;
  margin-bottom: 1.25rem; }

h2 {
  font-size: 24px;
  font-size: 1.5rem;
  margin-bottom: 8px;
  margin-bottom: 0.5rem; }

h3 {
  font-size: 18px;
  font-size: 1.125rem;
  margin-bottom: 4px;
  margin-bottom: 0.25rem; }

h4 {
  font-size: 18px;
  font-size: 1.125rem;
  font-weight: 400;
  margin-bottom: 4px;
  margin-bottom: 0.25rem; }

h5 {
  font-size: 16px;
  font-size: 1rem;
  margin-bottom: 8px;
  margin-bottom: 0.5rem; }

h6 {
  font-size: 13px;
  font-size: 0.8125rem;
  font-weight: 400;
  margin-bottom: 6px;
  margin-bottom: 0.375rem; }

a {
  color: #25a5ca;
  text-decoration: none; }
  .no-touch a:hover {
    text-decoration: underline; }

.grid {
  margin: 0;
  padding: 0;
  list-style: none;
  font-size: 0; }
  .grid:after {
    display: table;
    content: '';
    clear: both; }

.grid > * {
  display: inline-block;
  vertical-align: top;
  width: 100%;
  font-size: medium;
  text-justify: auto; }

.grid.-justified, .grid.-polar {
  text-align: justify; }

.grid.-row-spacing {
  margin-bottom: -24px;
  margin-bottom: -1.5rem; }
  .grid.-row-spacing > * {
    margin-bottom: 24px;
    margin-bottom: 1.5rem; }

.grid.-col-spacing {
  margin-left: -24px;
  margin-left: -1.5rem; }
  .grid.-col-spacing > * {
    padding-left: 24px;
    padding-left: 1.5rem; }

.grid.-middle > * {
  vertical-align: middle; }

.grid.-bottom > * {
  vertical-align: bottom; }

.grid-float {
  width: auto; }
  .grid-float:after {
    display: table;
    content: '';
    clear: both; }
  .grid-float > * {
    float: left;
    width: 100%; }
  .grid-float.-row-spacing {
    margin-bottom: 24px;
    margin-bottom: 1.5rem; }
    .grid-float.-row-spacing > * {
      margin-bottom: 24px;
      margin-bottom: 1.5rem; }
  .grid-float.-col-spacing {
    margin-left: -24px;
    margin-left: -1.5rem; }
    .grid-float.-col-spacing > * {
      padding-left: 24px;
      padding-left: 1.5rem; }

.icon {
  display: inline-block;
  width: 16px;
  width: 1rem;
  height: 16px;
  height: 1rem;
  vertical-align: middle; }

.icon\+ {
  width: 20px;
  width: 1.25rem;
  height: 20px;
  height: 1.25rem; }

.icon\+\+ {
  width: 24px;
  width: 1.5rem;
  height: 24px;
  height: 1.5rem; }

.icon\+\+\+ {
  width: 32px;
  width: 2rem;
  height: 32px;
  height: 2rem; }

.icon-- {
  width: 12px;
  width: 0.75rem;
  height: 12px;
  height: 0.75rem; }

.icon-white {
  color: #ffffff;
  fill: #ffffff; }

.icon-white > use {
  fill: #ffffff; }

.icon-green > use {
  fill: #6cc930; }

.icon-text > svg {
  margin-top: -.125em;
  margin-right: .25em; }

.icon-text--rev > svg {
  margin-top: -.125em;
  margin-left: .25em; }

.card {
  display: inline-block;
  position: relative;
  border: solid 1px #e8e8e7;
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
  color: inherit; }
  .no-touch .card:hover {
    text-decoration: none;
    color: inherit; }

.card--3d:after {
  content: '';
  position: absolute;
  bottom: -.25em;
  height: .25em;
  left: .25em;
  right: .25em;
  background-color: rgba(0, 0, 0, 0.05); }

.card__content {
  padding: 16px;
  padding: 1rem; }

.u-text-center {
  text-align: center; }

.u-text-left {
  text-align: right; }

.u-text-right {
  text-align: right; }

.u-align-top {
  vertical-align: top; }

.u-align-middle {
  vertical-align: middle; }

.u-align-bottom {
  vertical-align: bottom; }

.u-align-auto {
  margin-left: auto;
  margin-right: auto; }

.u-accessible-text {
  position: absolute !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important; }

.u-text-muted {
  opacity: .75;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=75)"; }

.u-hide {
  display: none; }

.u-show {
  display: block; }

.u-show--inline-block {
  display: inline-block; }

.u-show--inline {
  display: inline; }

.u-show\@medium {
  display: none; }
  @media only screen and (min-width: 48em) {
    .u-show\@medium {
      display: block; } }

.u-hide\@medium {
  display: block; }
  @media only screen and (min-width: 48em) {
    .u-hide\@medium {
      display: none; } }

.u-show--inline-block\@medium {
  display: none; }
  @media only screen and (min-width: 48em) {
    .u-show--inline-block\@medium {
      display: inline-block; } }

.u-hide--inline-block\@medium {
  display: inline-block; }
  @media only screen and (min-width: 48em) {
    .u-hide--inline-block\@medium {
      display: none; } }

.u-show--inline\@large {
  display: none; }
  @media only screen and (min-width: 64.0625em) {
    .u-show--inline\@large {
      display: inline; } }

.u-hide--inline\@large {
  display: inline; }
  @media only screen and (min-width: 64.0625em) {
    .u-hide--inline\@large {
      display: none; } }

.width-full {
  width: 100% !important; }

.width-1\/2 {
  width: 50% !important; }

.width-1\/3 {
  width: 33.33333% !important; }

.width-2\/3 {
  width: 66.66667% !important; }

.width-1\/4 {
  width: 25% !important; }

.width-2\/4 {
  width: 50% !important; }

.width-3\/4 {
  width: 75% !important; }

.width-1\/5 {
  width: 20% !important; }

.width-2\/5 {
  width: 40% !important; }

.width-3\/5 {
  width: 60% !important; }

.width-4\/5 {
  width: 80% !important; }

.width-1\/10 {
  width: 10% !important; }

.width-2\/10 {
  width: 20% !important; }

.width-3\/10 {
  width: 30% !important; }

.width-4\/10 {
  width: 40% !important; }

.width-5\/10 {
  width: 50% !important; }

.width-6\/10 {
  width: 60% !important; }

.width-7\/10 {
  width: 70% !important; }

.width-8\/10 {
  width: 80% !important; }

.width-9\/10 {
  width: 90% !important; }

@media only screen and (max-width: 47.9375em) {
  .width-full\@small {
    width: 100% !important; }
  .width-1\/2\@small {
    width: 50% !important; }
  .width-1\/3\@small {
    width: 33.33333% !important; }
  .width-2\/3\@small {
    width: 66.66667% !important; }
  .width-1\/4\@small {
    width: 25% !important; }
  .width-2\/4\@small {
    width: 50% !important; }
  .width-3\/4\@small {
    width: 75% !important; }
  .width-1\/5\@small {
    width: 20% !important; }
  .width-2\/5\@small {
    width: 40% !important; }
  .width-3\/5\@small {
    width: 60% !important; }
  .width-4\/5\@small {
    width: 80% !important; }
  .width-1\/10\@small {
    width: 10% !important; }
  .width-2\/10\@small {
    width: 20% !important; }
  .width-3\/10\@small {
    width: 30% !important; }
  .width-4\/10\@small {
    width: 40% !important; }
  .width-5\/10\@small {
    width: 50% !important; }
  .width-6\/10\@small {
    width: 60% !important; }
  .width-7\/10\@small {
    width: 70% !important; }
  .width-8\/10\@small {
    width: 80% !important; }
  .width-9\/10\@small {
    width: 90% !important; } }

@media only screen and (min-width: 48em) {
  .width-full\@medium {
    width: 100% !important; }
  .width-1\/2\@medium {
    width: 50% !important; }
  .width-1\/3\@medium {
    width: 33.33333% !important; }
  .width-2\/3\@medium {
    width: 66.66667% !important; }
  .width-1\/4\@medium {
    width: 25% !important; }
  .width-2\/4\@medium {
    width: 50% !important; }
  .width-3\/4\@medium {
    width: 75% !important; }
  .width-1\/5\@medium {
    width: 20% !important; }
  .width-2\/5\@medium {
    width: 40% !important; }
  .width-3\/5\@medium {
    width: 60% !important; }
  .width-4\/5\@medium {
    width: 80% !important; }
  .width-1\/10\@medium {
    width: 10% !important; }
  .width-2\/10\@medium {
    width: 20% !important; }
  .width-3\/10\@medium {
    width: 30% !important; }
  .width-4\/10\@medium {
    width: 40% !important; }
  .width-5\/10\@medium {
    width: 50% !important; }
  .width-6\/10\@medium {
    width: 60% !important; }
  .width-7\/10\@medium {
    width: 70% !important; }
  .width-8\/10\@medium {
    width: 80% !important; }
  .width-9\/10\@medium {
    width: 90% !important; } }

@media only screen and (min-width: 64.0625em) {
  .width-full\@large {
    width: 100% !important; }
  .width-1\/2\@large {
    width: 50% !important; }
  .width-1\/3\@large {
    width: 33.33333% !important; }
  .width-2\/3\@large {
    width: 66.66667% !important; }
  .width-1\/4\@large {
    width: 25% !important; }
  .width-2\/4\@large {
    width: 50% !important; }
  .width-3\/4\@large {
    width: 75% !important; }
  .width-1\/5\@large {
    width: 20% !important; }
  .width-2\/5\@large {
    width: 40% !important; }
  .width-3\/5\@large {
    width: 60% !important; }
  .width-4\/5\@large {
    width: 80% !important; }
  .width-1\/10\@large {
    width: 10% !important; }
  .width-2\/10\@large {
    width: 20% !important; }
  .width-3\/10\@large {
    width: 30% !important; }
  .width-4\/10\@large {
    width: 40% !important; }
  .width-5\/10\@large {
    width: 50% !important; }
  .width-6\/10\@large {
    width: 60% !important; }
  .width-7\/10\@large {
    width: 70% !important; }
  .width-8\/10\@large {
    width: 80% !important; }
  .width-9\/10\@large {
    width: 90% !important; } }

/*! HTML5 Boilerplate v5.2.0 | MIT License | https://html5boilerplate.com/ */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ''; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJpbmRleC5jc3MiLCJnZW5lcmljL19ib3gtc2l6aW5nLnNjc3MiLCJnZW5lcmljL19yZXNldC5zY3NzIiwiZ2VuZXJpYy9fc2hhcmVkLnNjc3MiLCJfdG9rZW5zLnNjc3MiLCJlbGVtZW50cy9fYmFzZS5wYWdlLnNjc3MiLCJlbGVtZW50cy9fdGV4dC5oZWFkaW5ncy5zY3NzIiwidG9vbHMvX2Z1bmN0aW9ucy5zY3NzIiwiZWxlbWVudHMvX3RleHQubGlua3Muc2NzcyIsInRvb2xzL19taXhpbnMuc2NzcyIsIm9iamVjdHMvX2dyaWQuc2NzcyIsIm9iamVjdHMvX2ljb24uc2NzcyIsIm9iamVjdHMvX2ljb24uY29sb3JzLnNjc3MiLCJvYmplY3RzL19pY29uLnRleHQuc2NzcyIsIi4uL2NvbXBvbmVudHMvY2FyZC9zdHlsZS5zY3NzIiwidXRpbGl0aWVzL190ZXh0LmFsaWdubWVudC5zY3NzIiwidXRpbGl0aWVzL19hbGlnbm1lbnQudmVydGljYWwtYWxpZ24uc2NzcyIsInV0aWxpdGllcy9fYWxpZ25tZW50LmJsb2Nrcy5zY3NzIiwidXRpbGl0aWVzL192aXNpYmlsaXR5LmFzc2lzdGl2ZS10ZXh0LnNjc3MiLCJ1dGlsaXRpZXMvX3RleHQubXV0ZWQuc2NzcyIsInV0aWxpdGllcy9fdmlzaWJpbGl0eS5oaWRlLXNob3cuc2NzcyIsInRvb2xzL19icmVha3BvaW50cy5zY3NzIiwidXRpbGl0aWVzL193aWR0aHMuc2NzcyIsInZlbmRvci9faHRtbDVib2lsZXJwbGF0ZS1wcmludC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RTtBQUU1RTs7O0dBR0c7QUFFSDtFQUNFLHdCQUF3QjtFQUFFLE9BQU87RUFDakMsMkJBQTJCO0VBQUUsT0FBTztFQUNwQywrQkFBK0I7RUFBRSxPQUFPLEVBQ3pDOztBQUVEOztHQUVHO0FBRUg7RUFDRSxVQUFVLEVBQ1g7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7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QUZEO0VBQ0ksc0JBQWtFLEVBQ3JFOztBQUZEO0VBQ0ksc0JBQWtFLEVBQ3JFOztBQUZEO0VBQ0ksc0JBQWtFLEVBQ3JFOztBQUZEO0VBQ0ksc0JBQWtFLEVBQ3JFOztBRHRCYjtFQ09BO0lBQ0ksdUJBQXVCLEVBQzFCO0VBV1c7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLDRCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksNEJBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckUsRUFBQTs7QURWYjtFQ0xBO0lBQ0ksdUJBQXVCLEVBQzFCO0VBV1c7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLDRCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksNEJBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckUsRUFBQTs7QURKYjtFQ1hBO0lBQ0ksdUJBQXVCLEVBQzFCO0VBV1c7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLDRCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksNEJBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckU7RUFGRDtJQUNJLHNCQUFrRSxFQUNyRTtFQUZEO0lBQ0ksc0JBQWtFLEVBQ3JFO0VBRkQ7SUFDSSxzQkFBa0UsRUFDckUsRUFBQTs7QUMzQmpCLDZFQUE2RTtBQVk3RTtFQUNFOzs7SUFHRSxtQ0FBbUM7SUFDbkMsdUJBQXVCO0lBQ3ZCLDRCQUE0QjtJQUM1Qiw2QkFBNkIsRUFDOUI7RUFFRDs7SUFFRSwyQkFBMkIsRUFDNUI7RUFFRDtJQUNFLDZCQUE0QixFQUM3QjtFQUVEO0lBQ0UsOEJBQTZCLEVBQzlCO0VBS0Q7O0lBRUUsWUFBWSxFQUNiO0VBRUQ7O0lBRUUsdUJBQXVCO0lBQ3ZCLHlCQUF5QixFQUMxQjtFQUtEO0lBQ0UsNEJBQTRCLEVBQzdCO0VBRUQ7O0lBRUUseUJBQXlCLEVBQzFCO0VBRUQ7SUFDRSwyQkFBMkIsRUFDNUI7RUFFRDs7O0lBR0UsV0FBVztJQUNYLFVBQVUsRUFDWDtFQUVEOztJQUVFLHdCQUF3QixFQUN6QixFQUFBIiwiZmlsZSI6ImluZGV4LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuaHRtbCB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAtbW96LWJveC1zaXppbmc6IGluaGVyaXQ7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYm9keSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG5wLCBibG9ja3F1b3RlLCBwcmUsXG5kbCwgZGQsIG9sLCB1bCxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsXG5maWd1cmUsXG50YWJsZSwgdGgsIHRkLCBjYXB0aW9uLFxuaHIge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbnVsLCBvbCwgZGwsXG5ibG9ja3F1b3RlLCBwLCBhZGRyZXNzLFxuaHIsXG50YWJsZSxcbmZpZWxkc2V0LCBmaWd1cmUsXG5wcmUge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cbiAgaDE6bGFzdC1jaGlsZCwgaDI6bGFzdC1jaGlsZCwgaDM6bGFzdC1jaGlsZCwgaDQ6bGFzdC1jaGlsZCwgaDU6bGFzdC1jaGlsZCwgaDY6bGFzdC1jaGlsZCxcbiAgdWw6bGFzdC1jaGlsZCwgb2w6bGFzdC1jaGlsZCwgZGw6bGFzdC1jaGlsZCxcbiAgYmxvY2txdW90ZTpsYXN0LWNoaWxkLCBwOmxhc3QtY2hpbGQsIGFkZHJlc3M6bGFzdC1jaGlsZCxcbiAgaHI6bGFzdC1jaGlsZCxcbiAgdGFibGU6bGFzdC1jaGlsZCxcbiAgZmllbGRzZXQ6bGFzdC1jaGlsZCwgZmlndXJlOmxhc3QtY2hpbGQsXG4gIHByZTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbnVsLCBvbCxcbmRkIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNXJlbTsgfVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IFwiU2Vnb2UgVUlcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYWVhZWE7XG4gIGNvbG9yOiAjMzUzNTM1O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7IH1cblxuYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG5cbmgxLCBoMiwgaDMsIGg0IHtcbiAgZm9udC1mYW1pbHk6IFwiTWV0YSBTZXJpZlwiLCBHZW9yZ2lhLCBzZXJpZjsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMi4xMjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07IH1cblxuaDIge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtOyB9XG5cbmgzIHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1ib3R0b206IDAuMjVyZW07IH1cblxuaDUge1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTsgfVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjM3NXJlbTsgfVxuXG5hIHtcbiAgY29sb3I6ICMyNWE1Y2E7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAubm8tdG91Y2ggYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuLmdyaWQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMDsgfVxuICAuZ3JpZDphZnRlciB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmdyaWQgPiAqIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1zaXplOiBtZWRpdW07XG4gIHRleHQtanVzdGlmeTogYXV0bzsgfVxuXG4uZ3JpZC4tanVzdGlmaWVkLCAuZ3JpZC4tcG9sYXIge1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG5cbi5ncmlkLi1yb3ctc3BhY2luZyB7XG4gIG1hcmdpbi1ib3R0b206IC0xLjVyZW07IH1cbiAgLmdyaWQuLXJvdy1zcGFjaW5nID4gKiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG5cbi5ncmlkLi1jb2wtc3BhY2luZyB7XG4gIG1hcmdpbi1sZWZ0OiAtMS41cmVtOyB9XG4gIC5ncmlkLi1jb2wtc3BhY2luZyA+ICoge1xuICAgIHBhZGRpbmctbGVmdDogMS41cmVtOyB9XG5cbi5ncmlkLi1taWRkbGUgPiAqIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG4uZ3JpZC4tYm90dG9tID4gKiB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207IH1cblxuLmdyaWQtZmxvYXQge1xuICB3aWR0aDogYXV0bzsgfVxuICAuZ3JpZC1mbG9hdDphZnRlciB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLmdyaWQtZmxvYXQgPiAqIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZ3JpZC1mbG9hdC4tcm93LXNwYWNpbmcge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTsgfVxuICAgIC5ncmlkLWZsb2F0Li1yb3ctc3BhY2luZyA+ICoge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG4gIC5ncmlkLWZsb2F0Li1jb2wtc3BhY2luZyB7XG4gICAgbWFyZ2luLWxlZnQ6IC0xLjVyZW07IH1cbiAgICAuZ3JpZC1mbG9hdC4tY29sLXNwYWNpbmcgPiAqIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMS41cmVtOyB9XG5cbi5pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMXJlbTtcbiAgaGVpZ2h0OiAxcmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5pY29uXFwrIHtcbiAgd2lkdGg6IDEuMjVyZW07XG4gIGhlaWdodDogMS4yNXJlbTsgfVxuXG4uaWNvblxcK1xcKyB7XG4gIHdpZHRoOiAxLjVyZW07XG4gIGhlaWdodDogMS41cmVtOyB9XG5cbi5pY29uXFwrXFwrXFwrIHtcbiAgd2lkdGg6IDJyZW07XG4gIGhlaWdodDogMnJlbTsgfVxuXG4uaWNvbi0tIHtcbiAgd2lkdGg6IDAuNzVyZW07XG4gIGhlaWdodDogMC43NXJlbTsgfVxuXG4uaWNvbi13aGl0ZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmaWxsOiAjZmZmZmZmOyB9XG5cbi5pY29uLXdoaXRlID4gdXNlIHtcbiAgZmlsbDogI2ZmZmZmZjsgfVxuXG4uaWNvbi1ncmVlbiA+IHVzZSB7XG4gIGZpbGw6ICM2Y2M5MzA7IH1cblxuLmljb24tdGV4dCA+IHN2ZyB7XG4gIG1hcmdpbi10b3A6IC0uMTI1ZW07XG4gIG1hcmdpbi1yaWdodDogLjI1ZW07IH1cblxuLmljb24tdGV4dC0tcmV2ID4gc3ZnIHtcbiAgbWFyZ2luLXRvcDogLS4xMjVlbTtcbiAgbWFyZ2luLWxlZnQ6IC4yNWVtOyB9XG5cbi5jYXJkIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogc29saWQgMXB4ICNlOGU4ZTc7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgY29sb3I6IGluaGVyaXQ7IH1cbiAgLm5vLXRvdWNoIC5jYXJkOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7IH1cblxuLmNhcmQtLTNkOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtLjI1ZW07XG4gIGhlaWdodDogLjI1ZW07XG4gIGxlZnQ6IC4yNWVtO1xuICByaWdodDogLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH1cblxuLmNhcmRfX2NvbnRlbnQge1xuICBwYWRkaW5nOiAxcmVtOyB9XG5cbi51LXRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi51LXRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0OyB9XG5cbi51LXRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuXG4udS1hbGlnbi10b3Age1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG5cbi51LWFsaWduLW1pZGRsZSB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLnUtYWxpZ24tYm90dG9tIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsgfVxuXG4udS1hbGlnbi1hdXRvIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuXG4udS1hY2Nlc3NpYmxlLXRleHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAtMXB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICBjbGlwOiByZWN0KDAgMCAwIDApICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dC1tdXRlZCB7XG4gIG9wYWNpdHk6IC43NTsgfVxuXG4udS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4udS1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLnUtc2hvdy0taW5saW5lLWJsb2NrIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi51LXNob3ctLWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZTsgfVxuXG4udS1zaG93XFxAbWVkaXVtIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgICAudS1zaG93XFxAbWVkaXVtIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLnUtaGlkZVxcQG1lZGl1bSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgIC51LWhpZGVcXEBtZWRpdW0ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi51LXNob3ctLWlubGluZS1ibG9ja1xcQG1lZGl1bSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgLnUtc2hvdy0taW5saW5lLWJsb2NrXFxAbWVkaXVtIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfSB9XG5cbi51LWhpZGUtLWlubGluZS1ibG9ja1xcQG1lZGl1bSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgICAudS1oaWRlLS1pbmxpbmUtYmxvY2tcXEBtZWRpdW0ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi51LXNob3ctLWlubGluZVxcQGxhcmdlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0LjA2MjVlbSkge1xuICAgIC51LXNob3ctLWlubGluZVxcQGxhcmdlIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZTsgfSB9XG5cbi51LWhpZGUtLWlubGluZVxcQGxhcmdlIHtcbiAgZGlzcGxheTogaW5saW5lOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQuMDYyNWVtKSB7XG4gICAgLnUtaGlkZS0taW5saW5lXFxAbGFyZ2Uge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi53aWR0aC1mdWxsIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtMVxcLzIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTFcXC8zIHtcbiAgd2lkdGg6IDMzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC0yXFwvMyB7XG4gIHdpZHRoOiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtMVxcLzQge1xuICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTJcXC80IHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC0zXFwvNCB7XG4gIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtMVxcLzUge1xuICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTJcXC81IHtcbiAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC0zXFwvNSB7XG4gIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtNFxcLzUge1xuICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTFcXC8xMCB7XG4gIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtMlxcLzEwIHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC0zXFwvMTAge1xuICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTRcXC8xMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtNVxcLzEwIHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC02XFwvMTAge1xuICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7IH1cblxuLndpZHRoLTdcXC8xMCB7XG4gIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuXG4ud2lkdGgtOFxcLzEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG5cbi53aWR0aC05XFwvMTAge1xuICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0Ny45Mzc1ZW0pIHtcbiAgLndpZHRoLWZ1bGxcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzJcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvM1xcQHNtYWxsIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTJcXC8zXFxAc21hbGwge1xuICAgIHdpZHRoOiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzRcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNFxcQHNtYWxsIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTNcXC80XFxAc21hbGwge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzVcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNVxcQHNtYWxsIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTNcXC81XFxAc21hbGwge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtNFxcLzVcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0zXFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC00XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC01XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC02XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC03XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC04XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC05XFwvMTBcXEBzbWFsbCB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gIC53aWR0aC1mdWxsXFxAbWVkaXVtIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvMlxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvM1xcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDMzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvM1xcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvNFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0zXFwvNFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvNVxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNVxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0zXFwvNVxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC00XFwvNVxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvMTBcXEBtZWRpdW0ge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMlxcLzEwXFxAbWVkaXVtIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTNcXC8xMFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC00XFwvMTBcXEBtZWRpdW0ge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtNVxcLzEwXFxAbWVkaXVtIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTZcXC8xMFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC03XFwvMTBcXEBtZWRpdW0ge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtOFxcLzEwXFxAbWVkaXVtIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTlcXC8xMFxcQG1lZGl1bSB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NC4wNjI1ZW0pIHtcbiAgLndpZHRoLWZ1bGxcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzJcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvM1xcQGxhcmdlIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTJcXC8zXFxAbGFyZ2Uge1xuICAgIHdpZHRoOiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzRcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNFxcQGxhcmdlIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTNcXC80XFxAbGFyZ2Uge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtMVxcLzVcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvNVxcQGxhcmdlIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7IH1cbiAgLndpZHRoLTNcXC81XFxAbGFyZ2Uge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAud2lkdGgtNFxcLzVcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0xXFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0yXFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC0zXFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC00XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC01XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC02XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC03XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC04XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC53aWR0aC05XFwvMTBcXEBsYXJnZSB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9IH1cblxuLyohIEhUTUw1IEJvaWxlcnBsYXRlIHY1LjIuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbS8gKi9cbkBtZWRpYSBwcmludCB7XG4gICosXG4gICo6YmVmb3JlLFxuICAqOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnOyB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzOyB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7IH0gfVxuIiwiaHRtbCB7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbioge1xuXG4gICAgJixcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgICAtbW96LWJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgICAgICAgfVxuXG59IiwiYm9keSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG5wLCBibG9ja3F1b3RlLCBwcmUsXG5kbCwgZGQsIG9sLCB1bCxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsXG5maWd1cmUsXG50YWJsZSwgdGgsIHRkLCBjYXB0aW9uLFxuaHIge1xuICAgIG1hcmdpbjogIDA7XG4gICAgcGFkZGluZzogMDtcbn0iLCIvLyBzYXNzLWxpbnQ6ZGlzYWJsZSBzaW5nbGUtbGluZS1wZXItc2VsZWN0b3JcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG51bCwgb2wsIGRsLFxuYmxvY2txdW90ZSwgcCwgYWRkcmVzcyxcbmhyLFxudGFibGUsXG5maWVsZHNldCwgZmlndXJlLFxucHJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkc2l6ZS1zcGFjZS1kZWZhdWx0O1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG59XG5cbnVsLCBvbCxcbmRkIHtcbiAgICBtYXJnaW4tbGVmdDogJHNpemUtc3BhY2UtZGVmYXVsdDtcbn0iLCIvLyBEZXNpZ24gU3lzdGVtIFRva2VucyBcbi8vIEdlbmVyYXRlZCBhdCBXZWQgSnVuIDAxIDIwMTYgMTE6MDA6MTMgR01UKzEyMDAgKE5aU1QpIFxuXG4kY29sb3ItdHJhbnNwYXJlbnQ6IHRyYW5zcGFyZW50O1xuJGNvbG9yLWJsYWNrLXRyYW5zcGFyZW50LTA1OiByZ2JhKDAsMCwwLC4wNSk7XG4kY29sb3ItYmxhY2stdHJhbnNwYXJlbnQtMDc6IHJnYmEoMCwwLDAsLjA3KTtcbiRjb2xvci1ibGFjay10cmFuc3BhcmVudC0xMDogcmdiYSgwLDAsMCwuMSk7XG4kY29sb3ItYmxhY2stdHJhbnNwYXJlbnQtMTY6IHJnYmEoMCwwLDAsLjE2KTtcbiRjb2xvci1ibGFjay10cmFuc3BhcmVudC0yMDogcmdiYSgwLDAsMCwuMjApO1xuJGNvbG9yLWJsYWNrLXRyYW5zcGFyZW50LTI0OiByZ2JhKDAsMCwwLC4yNCk7XG4kY29sb3ItYmxhY2stdHJhbnNwYXJlbnQtNDA6IHJnYmEoMCwwLDAsLjQwKTtcbiRjb2xvci13aGl0ZS10cmFuc3BhcmVudC0xMDogcmdiYSgyNTUsMjU1LDI1NSwuMTApO1xuJGNvbG9yLXdoaXRlLXRyYW5zcGFyZW50LTE1OiByZ2JhKDI1NSwyNTUsMjU1LC4xNSk7XG4kY29sb3Itd2hpdGUtdHJhbnNwYXJlbnQtMjA6IHJnYmEoMjU1LDI1NSwyNTUsLjIwKTtcbiRjb2xvci13aGl0ZS10cmFuc3BhcmVudC00MDogcmdiYSgyNTUsMjU1LDI1NSwuNDApO1xuJGNvbG9yLXdoaXRlLXRyYW5zcGFyZW50LTUwOiByZ2JhKDI1NSwyNTUsMjU1LC41MCk7XG4kY29sb3Itd2hpdGUtdHJhbnNwYXJlbnQtNzU6IHJnYmEoMjU1LDI1NSwyNTUsLjc1KTtcbiRjb2xvci13aGl0ZS10cmFuc3BhcmVudC05NzogcmdiYSgyNTUsMjU1LDI1NSwuOTcpO1xuJGNvbG9yLXdoaXRlOiAjZmZmZmZmO1xuJGNvbG9yLXdhcm0tZ3JleTogI2VlZWRlYztcbiRjb2xvci13YXJtLWdyZXktZGFya2VyOiAjZTVlM2RlO1xuJGNvbG9yLW5ldXRyYWwtZ3JleTogI2VhZWFlYTtcbiRjb2xvci1jaGFyY29hbDogIzM1MzUzNTtcbiRjb2xvci1vaWw6ICMyRjMzMUY7XG4kY29sb3Itb2lsLWhpZ2hsaWdodDogIzQ1NDgzYjtcbiRjb2xvci1vaWwtbGlnaHQ6ICNBNkE2OUU7XG4kY29sb3ItcGFsZS1ncmVlbjogI0Y0RkNGMDtcbiRjb2xvci1icmFuZC1wcmltYXJ5LWdyZWVuOiAjNkFCNDIxO1xuJGNvbG9yLWJyYW5kLXByaW1hcnktZ3JlZW4tZGFya2VuOiAjNmZhZDIwO1xuJGNvbG9yLWJyYW5kLWhlYWRsaW5lLWdyZWVuOiAjNzdCQTIyO1xuJGNvbG9yLWJ1c2luZXNzLWdyZWVuOiAjMTY0MjFlO1xuJGNvbG9yLWJ1c2luZXNzLWdyZWVuLWRhcmtlbjogIzE4NGMyMjtcbiRjb2xvci1saWdodC1zZXBhcmF0b3I6ICNlOGU4ZTc7XG4kY29sb3ItbGluay1wcmltYXJ5OiAjMjVhNWNhO1xuJGNvbG9yLWxpbmstcHJpbWFyeS1kYXJrOiAjMWQ4MzlmO1xuJGNvbG9yLW9yYW5nZS16ZXN0OiAjREZCRDBCO1xuJGNvbG9yLW9yYW5nZS1ob3Q6ICNmZjkxMDA7XG4kY29sb3ItYnV0dG9uLWJsdWU6ICMxYjlkY2Y7XG4kY29sb3ItYnV0dG9uLWdyZWVuOiAjNmNjOTMwO1xuJGNvbG9yLWJ1dHRvbi1ncmVlbi1kYXJrOiAjNTI4MjI0O1xuJGNvbG9yLXRleHQtb2xpdmU6ICM3N0JBMjI7XG4kY29sb3ItdGV4dC1ibHVlOiAjMUI5RENGO1xuJGNvbG9yLWNvbG9uZWwtbXVzdGFyZDogI2RmYmQwYjtcbiRjb2xvci1wYW5lbC1zYW5kOiAjZjdmNmYwO1xuJGNvbG9yLXBhbmVsLWxpZ2h0LWdyZWVuOiAjZjBmOGU3O1xuJGNvbG9yLXBhbmVsLWxpZ2h0LWdyZXk6ICNkZWRlZGU7XG4kY29sb3ItcGFuZWwtYnVzaW5lc3MtbGlnaHQtZ3JlZW46ICM4OWM1NGU7XG4kY29sb3ItZmVhdGhlcjogI2ZhZmFmYTtcbiRjb2xvci1mZWF0aGVyLXNwaW5lOiAjZWZlZmVmO1xuJGNvbG9yLWZlYXRoZXItbWVkaXVtOiAjZjNmM2YzO1xuJGJhY2tncm91bmQtY29sb3ItZ3JlZW46ICM2QUI0MjE7XG4kYnJlYWtwb2ludC1zbWFsbDogNDcuOTM3NWVtO1xuJGJyZWFrcG9pbnQtc21hbGxpc2g6IDQ3LjkzNzZlbTtcbiRicmVha3BvaW50LW1lZGl1bTogNDhlbTtcbiRicmVha3BvaW50LWxhcmdlOiA2NC4wNjI1ZW07XG4kYnJlYWtwb2ludC1vdGhlcjogNjQuMDYyNWVtO1xuJGZvbnQtZmFtaWx5OiAnTWV0YSBTZXJpZicsIEdlb3JnaWEsIHNlcmlmO1xuJGZvbnQtZmFtaWx5LXNhbnM6ICdTZWdvZSBVSScsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4kZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMDtcbiRmb250LXdlaWdodC1ib2xkOiA3MDA7XG4kZm9udC1zaXplLWhlYWRpbmctMTogMi41cmVtO1xuJGZvbnQtc2l6ZS1oZWFkaW5nLTI6IDEuNXJlbTtcbiRmb250LXNpemUtaGVhZGluZy0zOiAxLjEyNXJlbTtcbiRmb250LXNpemUtYmFzZTogMXJlbTtcbiRmb250LXNpemUtcmF0ZTogMy41cmVtO1xuJGZvbnQtc2l6ZS1sYWJlbDogLjY4NzVyZW07XG4kZm9udC1zaXplLXNtYWxsOiAwLjg3NXJlbTtcbiRmb250LWxpbmUtaGVpZ2h0LWhlYWRpbmctMTogMS4yO1xuJG1lZGlhLXF1ZXJ5LW1xLXNtYWxsOiBcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0Ny45Mzc1ZW0pXCI7XG4kbWVkaWEtcXVlcnktbXEtc21hbGxpc2g6IFwib25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ3LjkzNzZlbSlcIjtcbiRtZWRpYS1xdWVyeS1tcS1tZWRpdW06IFwib25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pXCI7XG4kbWVkaWEtcXVlcnktbXEtbWVkaXVtLWxhbmRzY2FwZTogXCJvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkgYW5kIChtaW4tYXNwZWN0LXJhdGlvOiA0LzMpXCI7XG4kbWVkaWEtcXVlcnktbXEtbGFyZ2U6IFwib25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NjQuMDYyNWVtKVwiO1xuJHNpemUtc3BhY2UtZGVmYXVsdDogMS41cmVtO1xuJHNpemUtbG9nbzogMy41cmVtO1xuJHNpemUtbG9nby1zbWFsbDogMi44NzVyZW07XG4kc2l6ZS1pY29uOiAxcmVtO1xuJHNpemUtaWNvbi1zbWFsbDogLjc1cmVtO1xuJHNpemUtaWNvbi1sYXJnZTogMS4yNXJlbTtcbiRzaXplLWljb24teGxhcmdlOiAxLjVyZW07XG4kc2l6ZS1pY29uLWRvdWJsZTogMnJlbTsiLCJodG1sIHtcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LXNhbnM7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLW5ldXRyYWwtZ3JleTtcbiAgICBjb2xvcjogJGNvbG9yLWNoYXJjb2FsO1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4iLCJoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICBsaW5lLWhlaWdodDogJGZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy0xO1xufVxuXG5oMSwgaDIsIGgzLCBoNCB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbn1cblxuaDEge1xuICAgIGZvbnQtc2l6ZTogcmVtKDM0KTtcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oMjApO1xufVxuXG5oMiB7XG4gICAgZm9udC1zaXplOiByZW0oMjQpO1xuICAgIG1hcmdpbi1ib3R0b206IHJlbSg4KTtcbn1cblxuaDMge1xuICAgIGZvbnQtc2l6ZTogcmVtKDE4KTtcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oNCk7XG59XG5cbmg0IHtcbiAgICBmb250LXNpemU6IHJlbSgxOCk7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1ub3JtYWw7XG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDQpO1xufVxuXG5oNSB7XG4gICAgZm9udC1zaXplOiByZW0oMTYpO1xuICAgIG1hcmdpbi1ib3R0b206IHJlbSg4KTtcbn1cblxuaDYge1xuICAgIGZvbnQtc2l6ZTogcmVtKDEzKTtcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW5vcm1hbDtcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oNik7XG59IiwiLy8gY29udmVydCBwaXhlbCB0byBlbVxuQGZ1bmN0aW9uIGVtKCRzaXplLCAkZW0tYmFzZTogMTYpIHtcbiAgICAkZW0tc2l6ZTogJHNpemUgLyAkZW0tYmFzZTtcbiAgICBAcmV0dXJuICN7JGVtLXNpemV9ZW07XG59XG5cbi8vIGNvbnZlcnQgcGl4ZWwgdG8gcmVtXG5AZnVuY3Rpb24gcmVtKCRzaXplKSB7XG4gICAgJHJlbS1zaXplOiBzdHJpcC11bml0KCRzaXplKSAvIHN0cmlwLXVuaXQoMTYpO1xuICAgIEByZXR1cm4gI3skcmVtLXNpemV9cmVtO1xufVxuXG4vLyBSZW1vdmUgdGhlIHVuaXRcbkBmdW5jdGlvbiBzdHJpcC11bml0KCRudW1iZXIpIHtcbiAgICBAaWYgdHlwZS1vZigkbnVtYmVyKSA9PSAnbnVtYmVyJyBhbmQgbm90IHVuaXRsZXNzKCRudW1iZXIpIHtcbiAgICAgICAgQHJldHVybiAkbnVtYmVyIC8gKCRudW1iZXIgKiAwICsgMSk7XG4gICAgfVxuXG4gICAgQHJldHVybiAkbnVtYmVyO1xufVxuXG4vLyBDaGVjayBpZiBhbiBpdGVtIGlzIGNvbnRhaW5lZCBpbiBhIGxpc3RcbkBmdW5jdGlvbiBjb250YWlucygkbGlzdCwgJHZhcikge1xuICAgICRfb3V0OiBmYWxzZTtcbiAgICBAZWFjaCAkaXRlbSBpbiAkbGlzdCB7IEBpZiAkaXRlbSA9PSAkdmFyIHsgJF9vdXQ6IHRydWU7IH0gfVxuICAgIEByZXR1cm4gJF9vdXQ7XG4gICAgLy8gICAgQHJldHVybiAoZmFsc2UgPT0gaW5kZXgoJGxpc3QsICR2YXIpKTtcbn1cblxuLy8gYSBzYXZlIHdheSB0byByZXR1cm4gdGhlIG50aCB2YWx1ZSBvZiBhIGxpc3RcbkBmdW5jdGlvbiBzYXZlLW50aC1saXN0LXZhbHVlKCRsaXN0LCAkcG9zaXRpb24pIHtcbiAgICAkdmFsdWU6IG51bGw7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBsZW5ndGgoJGxpc3QpIHtcbiAgICAgICAgQGlmICRpID09ICRwb3NpdGlvbiB7XG4gICAgICAgICAgICAkdmFsdWU6IG50aCgkbGlzdCwgJGkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIEByZXR1cm4gJHZhbHVlO1xufSIsImEge1xuICAgIGNvbG9yOiAkY29sb3ItbGluay1wcmltYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICBcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbn0iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgICNNSVhJTlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBHbG9iYWwgbWl4aW5zIGF2YWlsYWJsZSB0byB0aGUgZW50aXJlIHByb2plY3QuIERlZmluZSBmaWxlLXNwZWNpZmljXG4vLyBtaXhpbnMgaW5zaWRlIHRoZSBmaWxlIHRvIHdoaWNoIHRoZXkgcmVsYXRlLlxuXG5cbi8vIE1peGluIHRvIGRyb3AgbWljcm8gY2xlYXJmaXggaW50byBhIHNlbGVjdG9yLlxuLy9cbi8vIC5zaW1wbGUtdXNhZ2Uge1xuLy8gICBAaW5jbHVkZSBjbGVhcmZpeDtcbi8vIH1cbi8vXG4vLyAuZGV0YWlsZWQtdXNhZ2Uge1xuLy8gICBAaW5jbHVkZSBjbGVhcmZpeChpbXBvcnRhbnQpO1xuLy8gfVxuXG5AbWl4aW4gY2xlYXJmaXgge1xuICAgICY6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn1cblxuXG5AbWl4aW4gaG92ZXIge1xuICAgIC5uby10b3VjaCAmOmhvdmVyIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG4vLyBlbmFibGUvZGlzYWJsZSBmb250IHNtb290aGluZ1xuQG1peGluIGZvbnQtc21vb3RoaW5nKCR0b2dnbGU6IHRydWUpIHtcbiAgICBAaWYgKCR0b2dnbGUgPT0gdHJ1ZSkge1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogc3VicGl4ZWwtYW50aWFsaWFzZWQ7XG4gICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuICAgIH1cbn1cblxuQG1peGluIGZvbnQtc21vb3RoaW5nLW9mZiB7XG4gICAgQGluY2x1ZGUgZm9udC1zbW9vdGhpbmcoZmFsc2UpO1xufVxuXG4vLyBhZGQgYXJyb3cgdG8gYmxvY2sgZWxlbWVudFxuQG1peGluIGFycm93KCRvcmllbnRhdGlvbjogJ3VwJywgJGNvbG9yOiAjMDAwLCAkc2l6ZTogMWVtKSB7XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkY29sb3I7XG5cbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgei1pbmRleDogNztcblxuICAgICAgICBAaWYgKCRvcmllbnRhdGlvbiA9PSAndXAnKSB7XG5cbiAgICAgICAgICAgIHRvcDogYXV0bztcbiAgICAgICAgICAgIGJvdHRvbTogMTAwJTtcbiAgICAgICAgICAgIGxlZnQ6IDEuNSAqICRzaXplO1xuXG4gICAgICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDogJHNpemU7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcblxuICAgICAgICB9IEBlbHNlIGlmICgkb3JpZW50YXRpb24gPT0gJ2Rvd24nKSB7XG5cbiAgICAgICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICAgIGxlZnQ6IDEuNSAqICRzaXplO1xuXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAgICAgICAgICAgYm9yZGVyLXRvcC13aWR0aDogJHNpemU7XG4gICAgICAgICAgICBib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtcblxuICAgICAgICB9IEBlbHNlIGlmICgkb3JpZW50YXRpb24gPT0gJ3JpZ2h0Jykge1xuXG4gICAgICAgICAgICBsZWZ0OiAxMDAlO1xuICAgICAgICAgICAgdG9wOiAxLjUgKiAkc2l6ZTtcblxuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAgICAgICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6ICRzaXplO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkO1xuXG4gICAgICAgIH0gQGVsc2UgaWYgKCRvcmllbnRhdGlvbiA9PSAnbGVmdCcpIHtcblxuICAgICAgICAgICAgcmlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB0b3A6IDEuNSAqICRzaXplO1xuXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMDtcbiAgICAgICAgICAgIGJvcmRlci10b3A6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG5cbiAgICAgICAgICAgIGJvcmRlci1yaWdodC13aWR0aDogJHNpemU7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkO1xuXG4gICAgICAgIH1cblxuICAgIH1cblxufSIsIi5ncmlkIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgICBtYXJnaW46ICAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBmb250LXNpemU6IDA7XG59XG5cbiAgICAuZ3JpZCA+ICoge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmb250LXNpemU6IG1lZGl1bTsgLy8gRm9udC1zaXplIG1lZGl1bSByZXNldCB0aGUgYmxvY2sgdG8gdGhlIGNvbnRleHQgb2YgYm9keSAoaWUsIDE2cHgpXG4gICAgICAgIHRleHQtanVzdGlmeTogYXV0bztcbiAgICB9XG5cblxuLmdyaWQge1xuICAgICYuLWp1c3RpZmllZCxcbiAgICAmLi1wb2xhciB7XG4gICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgfVxuXG4gICAgJi4tcm93LXNwYWNpbmcge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAtJHNpemUtc3BhY2UtZGVmYXVsdDtcblxuICAgICAgICAmID4gKiB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkc2l6ZS1zcGFjZS1kZWZhdWx0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi4tY29sLXNwYWNpbmcge1xuICAgICAgICBtYXJnaW4tbGVmdDogLSRzaXplLXNwYWNlLWRlZmF1bHQ7XG5cbiAgICAgICAgPiAqIHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJHNpemUtc3BhY2UtZGVmYXVsdDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuLW1pZGRsZSA+ICoge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cblxuICAgICYuLWJvdHRvbSA+ICoge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgIH1cbn1cblxuXG4uZ3JpZC1mbG9hdCB7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4gICAgd2lkdGg6IGF1dG87XG5cbiAgICA+ICoge1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgJi4tcm93LXNwYWNpbmcge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkc2l6ZS1zcGFjZS1kZWZhdWx0O1xuXG4gICAgICAgICYgPiAqIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzaXplLXNwYWNlLWRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLi1jb2wtc3BhY2luZyB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtJHNpemUtc3BhY2UtZGVmYXVsdDtcblxuICAgICAgICA+ICoge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAkc2l6ZS1zcGFjZS1kZWZhdWx0O1xuICAgICAgICB9XG4gICAgfVxuXG59XG4iLCIuaWNvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAkc2l6ZS1pY29uO1xuICAgIGhlaWdodDogJHNpemUtaWNvbjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uaWNvblxcKyB7XG4gICAgd2lkdGg6ICRzaXplLWljb24tbGFyZ2U7XG4gICAgaGVpZ2h0OiAkc2l6ZS1pY29uLWxhcmdlO1xufVxuXG5cbi5pY29uXFwrXFwrIHtcbiAgICB3aWR0aDogJHNpemUtaWNvbi14bGFyZ2U7XG4gICAgaGVpZ2h0OiAkc2l6ZS1pY29uLXhsYXJnZTtcbn1cblxuLmljb25cXCtcXCtcXCsge1xuICAgIHdpZHRoOiAkc2l6ZS1pY29uLWRvdWJsZTtcbiAgICBoZWlnaHQ6ICRzaXplLWljb24tZG91YmxlO1xufVxuXG4uaWNvbi0tIHtcbiAgICB3aWR0aDogJHNpemUtaWNvbi1zbWFsbDtcbiAgICBoZWlnaHQ6ICRzaXplLWljb24tc21hbGw7XG59XG5cblxuLmljb24td2hpdGUge1xuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgZmlsbDogJGNvbG9yLXdoaXRlO1xufVxuXG5cbiIsIi5pY29uLXdoaXRlID4gdXNlIHtcblx0ZmlsbDogJGNvbG9yLXdoaXRlO1xufVxuXG4uaWNvbi1ncmVlbiA+IHVzZSB7XG5cdGZpbGw6ICRjb2xvci1idXR0b24tZ3JlZW47XG59IiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEljb24gd2l0aCB0ZXh0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9cbi8vIFVzZWZ1bCBmb3IgZHJvcHBpbmcgYSBzbWFsbCBpY29uIG5leHQgdG8gYSBwaWVjZSBvZiB0ZXh0LCB3aXRoIHNvbWUgc3BhY2luZy5cbi8vXG4vLyA8c3BhbiBjbGFzcz1cImljb24tdGV4dFwiPlxuLy8gICAgIDxzcGFuPlRoZSB0ZXh0PC9zcGFuPlxuLy8gICAgIDxzdmc+XG4vLyAgICAgICAgIDx1c2UgeGxpbms6aHJlZj1cIiNhcnJvdy1uZXh0XCI+XG4vLyAgICAgPC9zdmc+XG4vLyA8L3NwYW4+XG5cbi5pY29uLXRleHQge1xuICAgID4gc3ZnIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLS4xMjVlbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMjVlbTtcbiAgICB9XG59XG5cbi5pY29uLXRleHQtLXJldiB7XG4gICAgPiBzdmcge1xuICAgICAgICBtYXJnaW4tdG9wOiAtLjEyNWVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogLjI1ZW07XG4gICAgfVxufSIsIi5jYXJkIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGJvcmRlcjogc29saWQgMXB4ICRjb2xvci1saWdodC1zZXBhcmF0b3I7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNpemUtc3BhY2UtZGVmYXVsdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBcbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgXHRjb2xvcjogaW5oZXJpdDtcbiAgICB9XG59XG5cbi5jYXJkLS0zZDphZnRlciB7XG5cdGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0uMjVlbTtcbiAgICBoZWlnaHQ6IC4yNWVtO1xuICAgIGxlZnQ6IC4yNWVtO1xuICAgIHJpZ2h0OiAuMjVlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYmxhY2stdHJhbnNwYXJlbnQtMDU7XG59XG5cblx0LmNhcmRfX2NvbnRlbnQge1xuXHRcdHBhZGRpbmc6IDFyZW07XG5cdH1cblxuXHQuY2FyZF9fbGFiZWxzIHtcblxuXHR9XG5cblxuIiwiLnUtdGV4dC1jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnUtdGV4dC1sZWZ0IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnUtdGV4dC1yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4iLCIudS1hbGlnbi10b3Age1xuXHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4udS1hbGlnbi1taWRkbGUge1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4udS1hbGlnbi1ib3R0b20ge1xuXHR2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufSIsIi51LWFsaWduLWF1dG8ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuIiwiLnUtYWNjZXNzaWJsZS10ZXh0IHtcbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgSW1wb3J0YW50UnVsZVxuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAtMXB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICBjbGlwOiByZWN0KDAgMCAwIDApICFpbXBvcnRhbnQ7XG59XG4iLCIudS10ZXh0LW11dGVkIHtcblx0b3BhY2l0eTogLjc1O1xufSIsIi51LWhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4udS1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi51LXNob3ctLWlubGluZS1ibG9jayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnUtc2hvdy0taW5saW5lIHtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG4udS1zaG93XFxAbWVkaXVtIHtcblx0ZGlzcGxheTogbm9uZTtcblx0QGluY2x1ZGUgbWVkaXVtIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxufVxuXG4udS1oaWRlXFxAbWVkaXVtIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdEBpbmNsdWRlIG1lZGl1bSB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxufVxuXG4udS1zaG93LS1pbmxpbmUtYmxvY2tcXEBtZWRpdW0ge1xuXHRkaXNwbGF5OiBub25lO1xuXHRAaW5jbHVkZSBtZWRpdW0ge1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0fVxufVxuXG4udS1oaWRlLS1pbmxpbmUtYmxvY2tcXEBtZWRpdW0ge1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdEBpbmNsdWRlIG1lZGl1bSB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxufVxuXG4udS1zaG93LS1pbmxpbmVcXEBsYXJnZSB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdEBpbmNsdWRlIGxhcmdlIHtcblx0XHRkaXNwbGF5OiBpbmxpbmU7XG5cdH1cbn1cblxuLnUtaGlkZS0taW5saW5lXFxAbGFyZ2Uge1xuXHRkaXNwbGF5OiBpbmxpbmU7XG5cdEBpbmNsdWRlIGxhcmdlIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG59XG5cbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEJyZWFrcG9pbnRzIGFuZCBzaW1wbGUgbWVkaWEgcXVlcnkgbWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBzbWFsbCB7XG4gICAgQG1lZGlhICN7JG1lZGlhLXF1ZXJ5LW1xLXNtYWxsfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIHNtYWxsaXNoIHtcbiAgICBAbWVkaWEgI3skbWVkaWEtcXVlcnktbXEtc21hbGxpc2h9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gbWVkaXVtIHtcbiAgICBAbWVkaWEgI3skbWVkaWEtcXVlcnktbXEtbWVkaXVtfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIGxhcmdlIHtcbiAgICBAbWVkaWEgI3skbWVkaWEtcXVlcnktbXEtbGFyZ2V9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufSIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBXSURUSFNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEEgbWl4aW4gdG8gc3BpdCBvdXQgb3VyIHdpZHRoIGNsYXNzZXMuIFBhc3MgaW4gdGhlIGNvbHVtbnMgd2Ugd2FudCB0aGUgd2lkdGhzXG4vLyB0byBoYXZlLCBhbmQgYW4gb3B0aW9uYWwgc3VmZml4IGZvciByZXNwb25zaXZlIHdpZHRocy4gRS5nLiB0byBjcmVhdGUgdGhpcmRzXG4vLyBhbmQgcXVhcnRlcnMgZm9yIGEgc21hbGwgYnJlYWtwb2ludDpcbi8vXG4vLyBAaW5jbHVkZSB3aWR0aHMoMyA0LCAtc21hbGwpO1xuXG5AbWl4aW4gd2lkdGhzKCR3aWR0aHMtY29sdW1ucywgJHdpZHRocy1icmVha3BvaW50OiBudWxsKSB7XG5cbiAgICAud2lkdGgtZnVsbCN7JHdpZHRocy1icmVha3BvaW50fSB7XG4gICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBudW1iZXIgb2YgY29sdW1ucyBmb3IgZWFjaCBkZW5vbWluYXRvciBvZiBvdXIgZnJhY3Rpb25zLlxuICAgIEBlYWNoICR3aWR0aHMtZGVub21pbmF0b3IgaW4gJHdpZHRocy1jb2x1bW5zIHtcblxuICAgICAgICAvLyBCZWdpbiBjcmVhdGluZyBhIG51bWJlcmF0b3IgZm9yIG91ciBmcmFjdGlvbiB1cCB1bnRpbCB3ZSBoaXQgdGhlXG4gICAgICAgIC8vIGRlbm9taW5hdG9yLlxuICAgICAgICBAZm9yICR3aWR0aHMtbnVtZXJhdG9yIGZyb20gMSB0aHJvdWdoICR3aWR0aHMtZGVub21pbmF0b3Ige1xuXG4gICAgICAgICAgICAvLyBCdWlsZCBhIGNsYXNzIGluIHRoZSBmb3JtYXQgYC53aWR0aC0zLzRgLlxuICAgICAgICAgICAgQGlmICR3aWR0aHMtbnVtZXJhdG9yICE9ICR3aWR0aHMtZGVub21pbmF0b3Ige1xuICAgICAgICAgICAgICAgIC53aWR0aC0jeyR3aWR0aHMtbnVtZXJhdG9yfVxcLyN7JHdpZHRocy1kZW5vbWluYXRvcn0jeyR3aWR0aHMtYnJlYWtwb2ludH0ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogKCR3aWR0aHMtbnVtZXJhdG9yIC8gJHdpZHRocy1kZW5vbWluYXRvcikgKiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH1cbn1cblxuLy8gQSBzZXJpZXMgb2Ygd2lkdGggaGVscGVyIGNsYXNzZXMgdGhhdCB5b3UgY2FuIHVzZSB0byBzaXplIHRoaW5ncyBsaWtlIGdyaWRcbi8vIHN5c3RlbXMuIENsYXNzZXMgY2FuIHRha2UgYSBmcmFjdGlvbi1saWtlIGZvcm1hdCAoZS5nLiBgLndpZHRoLTIvM2ApLlxuLy8gVXNlIHRoZXNlIGluIHlvdXIgbWFya3VwOlxuLy9cbi8vIDxkaXYgY2xhc3M9XCJ3aWR0aC0xLzRcIj5cbi8vXG5cbkBpbmNsdWRlIHdpZHRocygyIDMgNCA1IDEwKTtcblxuQGluY2x1ZGUgc21hbGwge1xuXG4gICAgQGluY2x1ZGUgd2lkdGhzKDIgMyA0IDUgMTAsIFxcQHNtYWxsKTtcblxufVxuXG5AaW5jbHVkZSBtZWRpdW0ge1xuXG4gICAgQGluY2x1ZGUgd2lkdGhzKDIgMyA0IDUgMTAsIFxcQG1lZGl1bSk7XG5cbn1cblxuQGluY2x1ZGUgbGFyZ2Uge1xuXG4gICAgQGluY2x1ZGUgd2lkdGhzKDIgMyA0IDUgMTAsIFxcQGxhcmdlKTtcblxufSIsIi8qISBIVE1MNSBCb2lsZXJwbGF0ZSB2NS4yLjAgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vaHRtbDVib2lsZXJwbGF0ZS5jb20vICovXG5cbi8vIFdoYXQgZm9sbG93cyBpcyB0aGUgcmVzdWx0IG9mIG11Y2ggcmVzZWFyY2ggb24gY3Jvc3MtYnJvd3NlciBzdHlsaW5nLlxuLy8gQ3JlZGl0IGxlZnQgaW5saW5lIGFuZCBiaWcgdGhhbmtzIHRvIE5pY29sYXMgR2FsbGFnaGVyLCBKb25hdGhhbiBOZWFsLFxuLy8gS3JvYyBDYW1lbiwgYW5kIHRoZSBINUJQIGRldiBjb21tdW5pdHkgYW5kIHRlYW0uXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQcmludCBzdHlsZXMuXG4vLyBJbmxpbmVkIHRvIGF2b2lkIHRoZSBhZGRpdGlvbmFsIEhUVFAgcmVxdWVzdDpcbi8vIGh0dHA6Ly93d3cucGhwaWVkLmNvbS9kZWxheS1sb2FkaW5nLXlvdXItcHJpbnQtY3NzL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDsgLy8gQmxhY2sgcHJpbnRzIGZhc3RlcjogaHR0cDovL3d3dy5zYW5iZWlqaS5jb20vYXJjaGl2ZXMvOTUzXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG5cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gIH1cblxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICB9XG5cbiAgLy8gRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcbiAgLy8gb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgIHBzZXVkbyBwcm90b2NvbFxuXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICB9XG5cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG4gIC8vIFByaW50aW5nIFRhYmxlczpcbiAgLy8gaHR0cDovL2Nzcy1kaXNjdXNzLmluY3V0aW8uY29tL3dpa2kvUHJpbnRpbmdfVGFibGVzXG5cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuXG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG5cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
